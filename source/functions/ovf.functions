function indent()
{
	indentation="${indentation}${tab}"
}

function undent()
{
	indentation="${indentation:0:${#indentation}-1}"
}

function indented()
{
	echo "${indentation}$1"
}

function ovf2Xml()
{
	local indentation=""
	
	indented '<?xml version="1.0"?>'
	indented "<Envelope ovf:version='2.0' xml:lang='en-US' xmlns='http://schemas.dmtf.org/ovf/envelope/2' xmlns:ovf='http://schemas.dmtf.org/ovf/envelope/2' xmlns:rasd='http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData' xmlns:vssd='http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:vbox='http://www.virtualbox.org/ovf/machine' xmlns:epasd='http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_EthernetPortAllocationSettingData.xsd' xmlns:sasd='http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_StorageAllocationSettingData.xsd'>"
	indent
	
		ovf2Xml_References
		ovf2Xml_DiskSection
		ovf2Xml_NetworkSection
		ovf2Xml_VirtualSystem
	
	undent
	indented "</Envelope>"
EOF
}

function ovf2Xml_References()
{
	indented "<References>"
	indent
	
		local reference
		for reference in "$@"
		do
			indented "<File ovf:href="disk${index}.vmdk" ovf:id="file${index}"/>"
		done
	
	undent
	indented "</References>"
}

function ovf2Xml_DiskSection()
{
	indented "<DiskSection>"
	indent

		local reference
		for reference in "$@"
		do
			indented "<Disk ovf:capacity='17179869184' ovf:diskId='vmdisk${index}' ovf:fileRef='file${index}' ovf:format='http://www.vmware.com/interfaces/specifications/vmdk.html#streamOptimized' vbox:uuid='bd8fd5dd-12b3-4598-b319-1e4d755c5630'/>"
		done

	undent
	indented "</DiskSection>"
}

function ovf2Xml_NetworkSection()
{
	indented "<NetworkSection>"
	indent
		
		indented "<Info>Logical networks used in the package</Info>"
		indented "<Network ovf:name='${machineNetworkType}'>"
		indent
			
			indent
				
				indented "<Description>Logical network used by this appliance.</Description>"
				
			undent
			
		indented "</Network>"
		
	undent
	indented "</NetworkSection>"
}

function ovf2Xml_VirtualSystem()
{
	indented "<VirtualSystem ovf:id='${machine}'>"
	indent
		
		indented "<Info>A virtual machine</Info>"
		ovf2Xml_VirtualSystem_ProductSection
		ovf2Xml_VirtualSystem_AnnotationSection
		ovf2Xml_VirtualSystem_EulaSection
		ovf2Xml_VirtualSystem_OperatingSystemSection
		ovf2Xml_VirtualSystem_VirtualHardwareSection
		ovf2Xml_VirtualSystem_vboxMachine
		
	undent
	indented "</VirtualSystem>"
}

function ovf2Xml_VirtualSystem_ProductSection()
{
	indented "<ProductSection>"
	indent
		
		indented "<Info>Meta-information about the installed software</Info>"
		indented "<Product>${machine}</Product>"
		indented "<Vendor>raphaelcohn</Vendor>"
		indented "<Version>${machineVersion}</Version>"
		indented "<ProductUrl>${machineUrl}</ProductUrl>"
		indented "<VendorUrl>http://github.com/raphaelcohn/supermin-wrapper</VendorUrl>"
		
	undent
	indented "</ProductSection>"
}

function ovf2Xml_VirtualSystem_AnnotationSection()
{
	indented "<AnnotationSection>"
	indent
		
		indented "<Info>A human-readable annotation</Info>"
		indented "<Annotation>Immutable machine image for ${machine} produced by ${ourName}</Annotation>"
		
	undent
	indented "</AnnotationSection>"
}

function ovf2Xml_VirtualSystem_EulaSection()
{
	indented "<EulaSection>"
	indent
		
		indented "<Info>License agreement for the virtual system</Info>"
		indented "<License><![CDATA["
		cat <<-EOF
			The MIT License (MIT)

			Copyright (c) 2014 Raphael Cohn

			Permission is hereby granted, free of charge, to any person obtaining a copy
			of this software and associated documentation files (the "Software"), to deal
			in the Software without restriction, including without limitation the rights
			to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
			copies of the Software, and to permit persons to whom the Software is
			furnished to do so, subject to the following conditions:

			The above copyright notice and this permission notice shall be included in all
			copies or substantial portions of the Software.

			THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
			IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
			FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
			AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
			LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
			OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
			SOFTWARE.
		EOF
		echo "]]></License>"
		
	undent
	indented "</EulaSection>"
}

function ovf2Xml_VirtualSystem_OperatingSystemSection()
{
	indented "<OperatingSystemSection ovf:id='${machineOperatingSystemId}'>"
	indent
		
		indented "<Info>The kind of installed guest operating system</Info>"
		indented "<Description>${machineOperatingSystemName}</Description>"
		indented "<vbox:OSType ovf:required='false'>${machineOperatingSystemName}</vbox:OSType>"
		
	undent
	indented "</OperatingSystemSection>"
}

function ovf2Xml_VirtualSystem_VirtualHardwareSection()
{
	local -i instanceId=-1
	
	indented "<VirtualHardwareSection>"
	indent
		
		indented "<Info>Virtual hardware requirements for a virtual machine</Info>"
		ovf2Xml_VirtualSystem_VirtualHardwareSection_System
		ovf2Xml_VirtualSystem_VirtualHardwareSection_ItemCpu
		ovf2Xml_VirtualSystem_VirtualHardwareSection_ItemMemory
		ovf2Xml_VirtualSystem_VirtualHardwareSection_ItemIde
		ovf2Xml_VirtualSystem_VirtualHardwareSection_ItemSata
		ovf2Xml_VirtualSystem_VirtualHardwareSection_StorageItem
		ovf2Xml_VirtualSystem_VirtualHardwareSection_EthernetPortItem
		
	undent
	indented "</VirtualHardwareSection>"
}

function ovf2Xml_VirtualSystem_VirtualHardwareSection_System()
{
	indented "<System>"
	indent
		
		instanceId=$((instanceId+1))
		
		indented "<vssd:ElementName>Virtual Hardware Family</vssd:ElementName>"
		indented "<vssd:InstanceID>${instanceId}</vssd:InstanceID>"
		indented "<vssd:VirtualSystemIdentifier>${machine}</vssd:VirtualSystemIdentifier>"
		indented "<vssd:VirtualSystemType>${machineSystemType}</vssd:VirtualSystemType>"
		
	undent
	indented "</System>"
}

function ovf2Xml_VirtualSystem_VirtualHardwareSection_ItemCpu()
{
	indented "<Item>"
	indent
		
		instanceId=$((instanceId+1))
		
		indented "<rasd:Caption>${machineCpuCount} virtual CPU</rasd:Caption>"
		indented "<rasd:Description>Number of virtual CPUs</rasd:Description>"
		indented "<rasd:InstanceID>${instanceId}</rasd:InstanceID>"
		indented "<rasd:ResourceType>3</rasd:ResourceType>"
		indented "<rasd:VirtualQuantity>${machineCpuCount}</rasd:VirtualQuantity>"
	
	undent
	indented "</Item>"
}

function ovf2Xml_VirtualSystem_VirtualHardwareSection_ItemMemory()
{
	indented "<Item>"
	indent
		
		instanceId=$((instanceId+1))
		
		indented "<rasd:AllocationUnits>MegaBytes</rasd:AllocationUnits>"
		indented "<rasd:Caption>${machineRamSizeMegabytes} MB of memory</rasd:Caption>"
		indented "<rasd:Description>Memory Size</rasd:Description>"
		indented "<rasd:InstanceID>${instanceId}</rasd:InstanceID>"
		indented "<rasd:ResourceType>4</rasd:ResourceType>"
		indented "<rasd:VirtualQuantity>${machineRamSizeMegabytes}</rasd:VirtualQuantity>"
		
	undent
	indented "</Item>"
}

function ovf2Xml_VirtualSystem_VirtualHardwareSection_ItemIde()
{
	indented "<Item>"
	indent
		
		local -i index
		local machineIdeControllerType
		for machineIdeControllerType in "${machineIdeControllerTypes[@]}"
		do
			instanceId=$((instanceId+1))
			
			indented "<rasd:Address>${index}</rasd:Address>"
			indented "<rasd:Caption>ideController${index}</rasd:Caption>"
			indented "<rasd:Description>IDE Controller</rasd:Description>"
			indented "<rasd:InstanceID>${instanceId}</rasd:InstanceID>"
			indented "<rasd:ResourceSubType>${machineIdeControllerType}</rasd:ResourceSubType>"
			indented "<rasd:ResourceType>5</rasd:ResourceType>"
			
		done

	undent
	indented "</Item>"
}

function ovf2Xml_VirtualSystem_VirtualHardwareSection_ItemSata()
{
	indented "<Item>"
	indent
		
		local -i index
		local machineSataControllerType
		for machineSataControllerType in "${machineSataControllerTypes[@]}"
		do
			instanceId=$((instanceId+1))
			
			indented "<rasd:Address>${index}</rasd:Address>"
			indented "<rasd:Caption>sataController${index}</rasd:Caption>"
			indented "<rasd:Description>SATA Controller</rasd:Description>"
			indented "<rasd:InstanceID>${instanceId}</rasd:InstanceID>"
			indented "<rasd:ResourceSubType>${machineSataControllerType}</rasd:ResourceSubType>"
			indented "<rasd:ResourceType>20</rasd:ResourceType>"
			
		done

	undent
	indented "</Item>"
}

function ovf2Xml_VirtualSystem_VirtualHardwareSection_StorageItem()
{
	TODO - FIXME - has parent dependencies
	
	indented "<StorageItem>"
	indent
		
		local -i index
		local xxx
		for xxx in "${xxxx[@]}"
		do
			instanceId=$((instanceId+1))
			
			indented "<sasd:AddressOnParent>${index}</sasd:AddressOnParent>"
			indented "<sasd:Caption>disk${index}</sasd:Caption>"
			indented "<sasd:Description>Disk Image</sasd:Description>"
			indented "<sasd:HostResource>/disk/vmdiskdisk${index}</sasd:HostResource>"
			indented "<sasd:InstanceID>${instanceId}</sasd:InstanceID>"
			indented "<sasd:Parent>${parentInstanceId}</sasd:Parent>"
			indented "<sasd:ResourceType>17</sasd:ResourceType>"
			
		done

	undent
	indented "</StorageItem>"
}

function ovf2Xml_VirtualSystem_VirtualHardwareSection_EthernetPortItem()
{
	indented "<EthernetPortItem>"
	indent
		
		local -i index
		local machineEthernetControllerType
		for machineEthernetControllerType in "${machineEthernetControllerTypes[@]}"
		do
			instanceId=$((instanceId+1))
			
			indented "<epasd:AutomaticAllocation>true</epasd:AutomaticAllocation>"
			indented "<epasd:Caption>Ethernet adapter on '${machineNetworkType}'</epasd:Caption>"
			indented "<epasd:Connection>${machineNetworkType}</epasd:Connection>"
			indented "<epasd:InstanceID>${instanceId}</epasd:InstanceID>"
			indented "<epasd:ResourceSubType>${machineEthernetControllerType}</epasd:ResourceSubType>"
			indented "<epasd:ResourceType>10</epasd:ResourceType>"
			
		done

	undent
	indented "</EthernetPortItem>"
}

function ovf2Xml_VirtualSystem_vboxMachine()
{
	indented "<vbox:Machine ovf:required='false' version='1.12-macosx' uuid='${machineUuid}' name='${machine}' OSType='${machineOperatingSystemName}' snapshotFolder='Snapshots' lastStateChange='${machineLastStateChangeTimestamp}'>"
	indent
		
		echo XXXXXXX FILL OUT VBOX STUFF XXXXXXX
		
	undent
	indented "</vbox:Machine>"
}
