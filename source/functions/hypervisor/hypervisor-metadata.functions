function hypervisor_metadata_kvm()
{
	informationMessage WARN "kvm metadata not supported"
}

function hypervisor_metadata_xen()
{
	informationMessage WARN "kvm metadata not supported"
}

function hypervisor_metadata_qemu()
{
	case "$configuration_machine_hypervisorMetadataFormat" in

		native)
			local -r qemuScript="$machine_cacheArtefactsPath"/qemu-execute
			cat >"$qemuScript" <<-'EOF'
				#!/usr/bin/env bash
				set -e
				
				function purebash_dirname()
				{
				    local -r converted="${1%/*}"
				    if [ "$converted" = "$1" ]; then
				        echo "."
				    else
				        echo "$converted"
				    fi
				}

				function purebash_basename()
				{
				    echo "${1##*/}"
				}
				
				function findOurNameAndPath()
				{
				    readonly ourName="$(purebash_basename "$0")"
				    pushd "$(purebash_dirname "$0")" >/dev/null
				        readonly crudeOurPath="$(pwd)"
				    popd >/dev/null
				}
				
				function runQemuKvm()
				{
				    cd "$crudeOurPath" 1>/dev/null 2>/dev/null
			EOF
			cat >"$qemuScript" <<-EOF
				    exec -a "qemu-kvm-${machineName}" qemu-kvm \
				        -smp ${configuration_machine_cpusCount} \
				        -m ${configuration_machine_memoryMegabytes} \
				        -kernel "${boot_kernel_fileNameKernel}" \
				        -initrd "${boot_kernel_fileNameInitRamdisk}" \
				        -append "${boot_kernel_options}"
			EOF
			local disk
			for disk in "${machine_disks[@]}"
			do
				echo '\ ' >>"$qemuScript"
				echo -n "        -drive file=${disk}.${machineHypervisorDiskExtension},format=raw,if=virtio" >>"$qemuScript"
			done
			cat >"$qemuScript" <<-'EOF'
				}
				
				function main()
				{
				    findOurNameAndPath
				    runQemuKvm
				}
				
				main "$@"
			EOF
			
			chmod +x "$qemuScript"
		;;

		*)
			informationMessage FAIL "qemu metadata configuration_machine_hypervisorMetadataFormat $configuration_machine_hypervisorMetadataFormat not supported"
		;;

	esac
}

function hypervisor_metadata_vmware()
{
	case "$configuration_machine_hypervisorMetadataFormat" in

		native)
			informationMessage WARN "*********** TODO: vmware native format [vmx or vmc] ****************"
		;;
		
		ovf2)
			ovf2_generateOvf
		;;
		
		ova2)
			ovf2_ova2_generate
		;;
		
		*)
			informationMessage FAIL "vmware metadata configuration_machine_hypervisorMetadataFormat $configuration_machine_hypervisorMetadataFormat not supported"
		;;

	esac
}

function hypervisor_metadata_virtualbox()
{
	case "$configuration_machine_hypervisorMetadataFormat" in
	
		native)
			mkdir -m 0755 -p "$machine_cacheArtefactsPath"/Logs
			mkdir -m 0755 -p "$machine_cacheArtefactsPath"/Snapshots
			virtualbox_xml_VirtualBox >"$machine_cacheArtefactsPath"/"${machineName}".vbox
		;;
		
		ovf2)
			ovf2_generateOvf
		;;
		
		ova2)
			ovf2_ova2_generate
		;;
	
		*)
			informationMessage FAIL "virtualbox metadata configuration_machine_hypervisorMetadataFormat $configuration_machine_hypervisorMetadataFormat not supported"
		;;
	
	esac
}

function hypervisor_metadata_parallels()
{
	case "$configuration_machine_hypervisorMetadataFormat" in
		
		native)
			:
		;;
		
		*)
			informationMessage FAIL "parallels metadata configuration_machine_hypervisorMetadataFormat $configuration_machine_hypervisorMetadataFormat not supported"
		;;
		
	esac
}

# VMC files: https://stackoverflow.com/questions/4065682/importing-a-vhd-into-parallels-desktop-6-on-the-mac
# Look like an XML form of vmx files...

function hypervisor_metadata_vmware_native()
{
	cat >"$machine_cacheArtefactsPath"/"${machineName}.vmxf" <<-EOF
		<?xml version="1.0"?>
		<Foundry>
			<VM>
				<VMId type="string">52 48 f1 f8 9d 8a 5d 3a-fc 87 bc 30 2a 2b f7 72</VMId>
				<ClientMetaData>
					<clientMetaDataAttributes/>
					<HistoryEventList/>
				</ClientMetaData>
				<vmxPathName type="string">${machineName}.vmx</vmxPathName>
			</VM>
		</Foundry>
	EOF
	
	local -r machineGuestOs="rhel6-64"
	
	cat >"$machine_cacheArtefactsPath"/"${machineName}.vmx" <<-EOF
		.encoding = "UTF-8"
		displayName = "${machineName}"
		extendedConfigFile = "${machineName}.vmxf"
		svga.vramSize = "8388608"
		memSize = "2048"
		nvram = "${machineName}.nvram"
		guestOS = "${machineGuestOs}"
		cleanShutdown = "FALSE"
		softPowerOff = "FALSE"
		config.version = "8"
		virtualHW.version = "10"
		virtualHW.productCompatibility = "hosted"
		uuid.bios = "42 05 e3 b8 29 4b 85 26-23 3c d5 da 8e fe cc bd"
		vc.uuid = "50 05 b6 e6 87 c2 2f a2-42 30 47 5f 2c ce 4f a2"
		sched.swap.derivedName = "/vmfs/volumes/531f2bfa-57b35c77-b683-005056b629c3/${machineName}/${machineName}-fd3c723e.vswp"
		uuid.location = "56 4d 92 b8 77 d5 59 9a-c5 98 3e 8e cd 4d 91 53"
		tools.syncTime = "FALSE"
		tools.upgrade.policy = "manual"
		toolScripts.afterPowerOn = "TRUE"
		toolScripts.afterResume = "TRUE"
		toolScripts.beforeSuspend = "TRUE"
		toolScripts.beforePowerOff = "TRUE"
		svga.present = "TRUE"
		pciBridge0.present = "TRUE"
		pciBridge0.pciSlotNumber = "17"
		pciBridge4.pciSlotNumber = "21"
		pciBridge4.present = "TRUE"
		pciBridge4.virtualDev = "pcieRootPort"
		pciBridge4.functions = "8"
		pciBridge5.pciSlotNumber = "22"
		pciBridge5.present = "TRUE"
		pciBridge5.virtualDev = "pcieRootPort"
		pciBridge5.functions = "8"
		pciBridge6.pciSlotNumber = "23"
		pciBridge6.present = "TRUE"
		pciBridge6.virtualDev = "pcieRootPort"
		pciBridge6.functions = "8"
		pciBridge7.pciSlotNumber = "24"
		pciBridge7.present = "TRUE"
		pciBridge7.virtualDev = "pcieRootPort"
		pciBridge7.functions = "8"
		vmci.filter.enable = "TRUE"
		vmci0.present = "TRUE"
		vmci0.id = "-1895904067"
		vmci0.pciSlotNumber = "32"
		hpet0.present = "TRUE"
		floppy0.startConnected = "FALSE"
		floppy0.clientDevice = "TRUE"
		floppy0.fileName = "Floppy drive 1"
		scsi0.virtualDev = "pvscsi"
		scsi0.pciSlotNumber = "160"
		scsi0.present = "TRUE"
		scsi0.sasWWID = "50 05 05 68 29 4b 85 20"
		scsi0:0.deviceType = "scsi-hardDisk"
		scsi0:0.fileName = "${machineName}.vmdk"
		scsi0:0.present = "TRUE"
		scsi0:0.redo = ""
		sata0.pciSlotNumber = "33"
		sata0.present = "TRUE"
		sata0:0.startConnected = "FALSE"
		sata0:0.deviceType = "cdrom-raw"
		sata0:0.clientDevice = "TRUE"
		sata0:0.fileName = "CD/DVD drive 1"
		sata0:0.present = "TRUE"
		ethernet0.virtualDev = "vmxnet3"
		ethernet0.networkName = "VM Network"
		ethernet0.addressType = "vpx"
		ethernet0.generatedAddress = "00:50:56:85:cd:e8"
		ethernet0.pciSlotNumber = "192"
		ethernet0.present = "TRUE"
	EOF
}
