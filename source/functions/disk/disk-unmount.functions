disk_unmount_functions=()

function disk_unmount_optimiseDisk()
{
	set -x
	case "${machine_configuration_disksFilesystemType["$disk"]}" in
	
		ext2|ext3|ext4)
			e2fsck -D -f "${machine_derived_disksPartitionImagePath["$disk"]}"
			tune2fs -f -c 0 -C 0 -i 36m -M "${machine_derived_disksPartitionImagePath["$disk"]}" -u 0 -g 0 "${machine_derived_disksPartitionImagePath["$disk"]}"
		;;
	
		*)
			return 0
		;;
	esac
}
disk_unmount_functions+=(disk_unmount_optimiseDisk)

function disk_unmount_shrinkDiskImage()
{
	if [ "${machine_configuration_disksShrinkDisk["$disk"]}" != "yes" ]; then
		return 0
	fi
	
	# Values match man partx (except for unpartitioned)
	case "$machineHypervisorDiskPartioning" in
		
		unpartitioned)
			:
		;;
		
		bsd|solaris|unixware)
			informationMessage FAIL "$machineHypervisorDiskPartioning partitioning is not supported for extlinux"
			exitError 1
		;;
		
		gpt)
			informationMessage FAIL "GPT partitioning is unsupported at this time for extlinux"
			exitError 1
		;;
		
		dos)
			informationMessage WARN "Dish shrinking is not currently possible when using DOS partition tables"
			return 0
		;;
	
	esac
	
	case "${machine_configuration_disksFilesystemType["$disk"]}" in
		
		ext2|ext3|ext4)
			:
		;;
		
		*)
			return 0
		;;
	esac
	
	configuration_disk_blockSize=${machine_configuration_disksBlockSize["$disk"]}
	
	local -ir minimumSize="$(resize2fs -P "${machine_derived_disksPartitionImagePath["$disk"]}" 2>/dev/null | awk '{print $7}')"
	resize2fs -M "${machine_derived_disksPartitionImagePath["$disk"]}" 2>/dev/null
	
	local -ir shrinkSizeInBytes=$((minimumSize*configuration_disk_blockSize))
	truncate -s $shrinkSizeInBytes "${machine_derived_disksDiskImagePath["$disk"]}"
}
disk_unmount_functions+=(disk_unmount_shrinkDiskImage)

function disk_unmount_image()
{
	# Values match man partx (except for unpartitioned)
	case "$machineHypervisorDiskPartioning" in
		
		unpartitioned)
			# Does nothing
			:
		;;
		
		dos)
			# mounting_unmountDisk should tak the original disk image path, not the loopback device created, but doesn't...
			#mounting_unmountDisk "${machine_derived_disksDiskImagePath["$disk"]}"
			mounting_unmountDisk "${machine_derived_disksLoopbackDevice["$disk"]}"
		;;
		
		bsd|solaris|unixware)
			informationMessage FAIL "$machineHypervisorDiskPartioning partitioning is not supported"
			exitError 1
		;;
		
		gpt)
			informationMessage FAIL "GPT partitioning is unsupported at this time"
			exitError 1
		;;
	
	esac
}
disk_unmount_functions+=(disk_unmount_image)

function disk_unmount_backupMasterBootRecord()
{
	# Values match man partx (except for unpartitioned)
	case "$machineHypervisorDiskPartioning" in
		
		unpartitioned)
			# Does nothing
			:
		;;
		
		dos)
			dd bs=512 count=1 conv=notrunc if="${machine_derived_disksDiskImagePath["$disk"]}" of="$machine_cacheArtefactsPath"/"$disk".mbr.bak status=none 1>/dev/null 2>/dev/null
		;;
		
		bsd|solaris|unixware)
			informationMessage FAIL "$machineHypervisorDiskPartioning partitioning is not supported"
			exitError 1
		;;
		
		gpt)
			informationMessage FAIL "GPT partitioning is unsupported at this time"
			exitError 1
		;;
	
	esac
}
disk_unmount_functions+=(disk_unmount_backupMasterBootRecord)

function disk_unmount_convertImage()
{
	hypervisor_disk_convertDiskImage_${machineHypervisorDiskExtension}
}
disk_unmount_functions+=(disk_unmount_convertImage)
