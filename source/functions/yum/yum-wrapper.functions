function yum_wrapper()
{
	if dependency_isMacOSX; then
		# yum does not exist in brew; installing via source has problems (msgfmt, broken Makefile, broken install utility; Python versioning)
		return 0
	fi
	
	if [ "$beVerbose" = no ]; then
		if [ "$beDebug" = no ]; then
			local -r yumVerbosity="--quiet"
		else
			local -r yumVerbosity="--verbose"
		fi
	else
		local -r yumVerbosity="--verbose"
	fi
	
	informationMessage INFO "${tab}${tab}${tab}${tab}${tab}${1} yum_wrapper: to see progress  tail -f $yum_cacheYumLogPath/yum.$1.out.log"
	yum ${yumVerbosity} --config="$yum_cacheYumConfFilePath" "$@" 1>>"$yum_cacheYumLogPath"/yum."$1".out.log 2>>"$yum_cacheYumLogPath"/yum."$1".err.log
}

function yum_wrapper_install()
{
	declare -a yumPackageNames=("$@")
	if [ ${#yumPackageNames[@]} -eq 0 ]; then
		return 0
	fi

	# We install packages individually like this so that if a package doesn't exist, we don't get an unintelligible error
	# It does make installation slower
	local yumPackageName
	for yumPackageName in "${yumPackageNames[@]}"
	do
		yum_wrapper install "$yumPackageName"
	done
}

function yum_wrapper_localInstall()
{
	local -r rpmsFolder="$1"
	shift 1
	declare -a yumRpmFiles="$@"
	if [ ${#yumRpmFiles[@]} -eq 0 ]; then
		return 0
	fi
	
	pushd "$rpmsFolder" 1>/dev/null 2>/dev/null
		
		local yumRpmFile
		for yumRpmFile in "${yumRpmFiles[@]}"
		do
			yum_wrapper localinstall "$yumRpmFile"
		done
		
	popd 1>/dev/null 2>/dev/null
}
