function yum_wrapper_program()
{
	local -r programName="$1"
	shift 1
	
	if dependency_isMacOSX; then
		# yum does not exist in brew; installing via source has problems (msgfmt, broken Makefile, broken install utility; Python versioning)
		return 0
	fi

	if [ "$beVerbose" = no ]; then
		if [ "$beDebug" = no ]; then
			local -r yumVerbosity="--quiet"
		else
			local -r yumVerbosity="--verbose"
		fi
	else
		local -r yumVerbosity="--verbose"
	fi
	
	"$programName" ${yumVerbosity} --config="$yum_cacheYumConfFilePath" "$@" 2>>"$yum_cacheYumLogPath"/"$programName".err.log
}

function yum_wrapper_programYum()
{
	yum_wrapper_program yum "$@"
}

function yum_wrapper_programRepoquery()
{
	local -r architecture="$1"
	shift 1
	
	# yum makecache must be run first! or use --tempcache
	yum_wrapper_program repoquery --all --archlist="${architecture},noarch" --tree-requires "$@"
}

function yum_wrapper_programYumdownloader()
{
	local -r destinationPath="$1"
	local -r architecture="$2"
	shift 2
	
	# --archlist="${architecture},noarch"
	yum_wrapper_program yumdownloader --destdir "$destinationPath" "$@" 1>>"$yum_cacheYumLogPath"/yumdownloader.out.log
}

function yum_wrapper_programYumLocalinstall()
{
	local -r rpmsFolder="$1"
	shift 1
	
	if [ $# -eq 0 ]; then
		return 0
	fi
	
	pushd "$rpmsFolder" 1>/dev/null 2>/dev/null
		
		informationMessage INFO "${tab}${tab}${tab}${tab} localinstall $@"
		# 1>>"$yum_cacheYumLogPath"/yum.out.log
		yum_wrapper_programYum localinstall "$@"
		
	popd 1>/dev/null 2>/dev/null
}
