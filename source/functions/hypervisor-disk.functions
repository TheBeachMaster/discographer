function hypervisor_disk_pathToOutputFile()
{
	local -r extension="$1"
	local -r inputFile="${machineDisksConfigurationDiskImagePath["$disk"]}"
	local -r withoutExtension="${inputFile%%.img}"
	local -r fileName="$(purebash_basename "$withoutExtension")"
	echo -n "$cacheMachineArtefactsPath"/"$fileName"."$extension"
}

function hypervisor_disk_convertDiskImageHardLink()
{
	local -r extension="$1"
	local -r format="$2"
	shift 2
	local -r inputFile="${machineDisksConfigurationDiskImagePath["$disk"]}"
	local -r outputFile="$(hypervisor_disk_pathToOutputFile "$extension")"
	
	# Hard link; copy if that fails (eg on different disks)
	ln "$inputFile" "$outputFile" 2>/dev/null || cp "$inputFile" "$outputFile"
	rm -rf "$inputFile"
	
	machineDisksConfigurationDiskImagePath["$disk"]="$outputFile"
}

function hypervisor_disk_convertDiskImageUsingQemuImg()
{
	local -r extension="$1"
	local -r format="$2"
	shift 2
	
	local -r inputFile="${machineDisksConfigurationDiskImagePath["$disk"]}"
	local -r outputFile="$(hypervisor_disk_pathToOutputFile "$extension")"

	qemu-img convert -q -f raw -O "$extension" "$@" "$inputFile" "$outputFile"
	rm -rf "$inputFile"

	machineDisksConfigurationDiskImagePath["$disk"]="$outputFile"
}

function hypervisor_disk_convertDiskImage_unpartitioned()
{
	hypervisor_disk_convertDiskImageHardLink "$machineHypervisorDiskExtension"
}

function hypervisor_disk_convertDiskImage_raw()
{
	hypervisor_disk_convertDiskImageHardLink "$machineHypervisorDiskExtension"
}

function hypervisor_disk_convertDiskImage_qcow2()
{
	hypervisor_disk_convertDiskImageUsingQemuImg qcow2 qcow2 -c -o preallocation=off,cluster_size=512
}

function hypervisor_disk_convertDiskImage_vmdk()
{
	informationMessage WARN "********* FIXME: Need to create VMDK disk UUID *******************"
	hypervisor_disk_convertDiskImageUsingQemuImg vmdk vmdk
	#vmkfstools -J setuuid "$cacheMachineArtefactsPath"/"$disk".vmdk
	# Apparently, virtual box can also do this for a vmdk...
}

function hypervisor_disk_convertDiskImage_vdi()
{
	hypervisor_disk_convertDiskImageUsingQemuImg vdi vdi
	# We also force the UUID of the VDI disk to match the file system UUID.
	VBoxManage internalcommands sethduuid "$cacheMachineArtefactsPath"/"$disk".vdi "${machineDisksConfigurationUuid["$disk"]}"
}

function hypervisor_disk_convertDiskImage_hdd()
{
	hypervisor_disk_convertDiskImageUsingQemuImg hdd parallels
}